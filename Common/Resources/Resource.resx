<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultUser" xml:space="preserve">
    <value>Admin</value>
    <comment>tên người dùng mặc định</comment>
  </data>
  <data name="DevMsg_ApproveFailed" xml:space="preserve">
    <value>Insert to Database return 0</value>
    <comment>Message cho dev đọc khi duyệt bản ghi vào db thất bại</comment>
  </data>
  <data name="DevMsg_CannotFind" xml:space="preserve">
    <value>Could not find record with given id</value>
    <comment>Message cho dev đọc khi không tìm thấy bản ghi</comment>
  </data>
  <data name="DevMsg_DeleteFailed" xml:space="preserve">
    <value>Delete to database return 0</value>
    <comment>Message cho dev đọc khi delete bản ghi vào db thất bại</comment>
  </data>
  <data name="DevMsg_DenineFailed" xml:space="preserve">
    <value>Insert to Database return 0</value>
    <comment>Message cho dev đọc khi từ chối bản ghi vào db thất bại</comment>
  </data>
  <data name="DevMsg_Exception" xml:space="preserve">
    <value>Catched an exception</value>
    <comment>Message cho dev đọc khi gọi api gặp exception</comment>
  </data>
  <data name="DevMsg_InsertFailed" xml:space="preserve">
    <value>Insert to database return 0</value>
    <comment>Message cho dev đọc khi insert bản ghi vào db thất bại</comment>
  </data>
  <data name="DevMsg_UpdateFailed" xml:space="preserve">
    <value>Update to database return 0</value>
    <comment>Message cho dev đọc khi insert bản ghi vào db thất bại</comment>
  </data>
  <data name="DevMsg_ValidateFailed" xml:space="preserve">
    <value>One or more validation errors occurred</value>
    <comment>Message cho dev đọc khi validate dữ liệu đầu vào thất bại</comment>
  </data>
  <data name="Gender_Female_VN" xml:space="preserve">
    <value>Nữ</value>
    <comment>text tiếng việt cho trường giới tính nữ</comment>
  </data>
  <data name="Gender_Male_VN" xml:space="preserve">
    <value>Nam</value>
    <comment>text tiếng việt cho trường giới tính nam</comment>
  </data>
  <data name="Gender_Other_VN" xml:space="preserve">
    <value>Khác</value>
    <comment>text tiếng việt cho trường giới tính khác</comment>
  </data>
  <data name="New_EmployeeCode_Prefix" xml:space="preserve">
    <value>NV</value>
    <comment>prefix của mã nhân viên</comment>
  </data>
  <data name="Proc_ChangeStatusMultiple" xml:space="preserve">
    <value>proc_{0}_ChangeStatusMultiple</value>
    <comment>template string cho procedure sửa trạng thái nhiều bản ghi trong 1 bảng</comment>
  </data>
  <data name="Proc_Delete" xml:space="preserve">
    <value>proc_{0}_Delete</value>
    <comment>template string cho procedure xoá 1 bản ghi trong 1 bảng</comment>
  </data>
  <data name="Proc_DeleteMultiple" xml:space="preserve">
    <value>Proc_{0}_DeleteMultiple</value>
    <comment>template string cho procedure xoá nhiều bản ghi trong 1 bảng</comment>
  </data>
  <data name="Proc_Detail" xml:space="preserve">
    <value>proc_{0}_Detail</value>
    <comment>template string cho procedure lấy chi tiết 1 bản ghi trong 1 bảng</comment>
  </data>
  <data name="Proc_Duplicate" xml:space="preserve">
    <value>proc_{0}_Duplicate</value>
    <comment>template string cho procedure lấy số bản ghi có giá trị của field trùng với value </comment>
  </data>
  <data name="Proc_employee_Filter" xml:space="preserve">
    <value>proc_employee_Filter</value>
    <comment>template string cho procedure lấy nhân viên trong bảng theo phân trang</comment>
  </data>
  <data name="proc_employee_GetAllFilter" xml:space="preserve">
    <value>proc_employee_GetAllFilter</value>
    <comment>tên procedure lấy tất cả nhân viên theo filter ( không phân trang )</comment>
  </data>
  <data name="Proc_employee_Max" xml:space="preserve">
    <value>proc_employee_max</value>
    <comment>template string cho procedure lấy mã nhân viên lớn nhất trong bảng nhân viên</comment>
  </data>
  <data name="Proc_GetAll" xml:space="preserve">
    <value>proc_{0}_GetAll</value>
    <comment>Template string cho procedure lấy tất cả bản ghi của một bảng</comment>
  </data>
  <data name="Proc_GetAllCount" xml:space="preserve">
    <value>proc_{0}_GetAllCount</value>
    <comment>Template string cho procedure đếm tất cả bản ghi trong một bảng</comment>
  </data>
  <data name="Proc_Insert" xml:space="preserve">
    <value>proc_{0}_Insert</value>
    <comment>template string cho procedure insert 1 bản ghi vào bảng</comment>
  </data>
  <data name="Proc_request_Filter" xml:space="preserve">
    <value>Proc_request_Filter</value>
    <comment>template string cho procedure lấy request trong bảng theo phân trang</comment>
  </data>
  <data name="Proc_Update" xml:space="preserve">
    <value>Proc_{0}_Update</value>
    <comment>template string cho procedure insert 1 bản ghi vào bảng nhân viên</comment>
  </data>
  <data name="Status_Approve_VN" xml:space="preserve">
    <value>Đã duyệt</value>
  </data>
  <data name="Status_Denined_VN" xml:space="preserve">
    <value>Từ chối</value>
  </data>
  <data name="Status_Waiting_VN" xml:space="preserve">
    <value>Chờ duyệt</value>
  </data>
  <data name="UserMsg_ApproveFailed" xml:space="preserve">
    <value>Duyệt thất bại</value>
    <comment>Message cho user đọc khi duyệt bản ghi vào db thất bại</comment>
  </data>
  <data name="UserMsg_CannotFind" xml:space="preserve">
    <value>Không tìm thấy bản ghi</value>
    <comment>Message cho user đọc khi không tìm thấy bản ghi</comment>
  </data>
  <data name="UserMsg_DeleteFailed" xml:space="preserve">
    <value>Xoá thất bại</value>
    <comment>Message cho user đọc khi xoá bản ghi vào db thất bại</comment>
  </data>
  <data name="UserMsg_DenineFailed" xml:space="preserve">
    <value>Từ chối thất bại</value>
    <comment>Message cho user đọc khi từ chối bản ghi vào db thất bại</comment>
  </data>
  <data name="UserMsg_Exception" xml:space="preserve">
    <value>Có lỗi xảy ra! Vui lòng liên hệ với MISA</value>
    <comment>Message cho user đọc khi gọi api gặp exception</comment>
  </data>
  <data name="UserMsg_InsertFailed" xml:space="preserve">
    <value>Thêm mới thất bại</value>
    <comment>Message cho user đọc khi insert bản ghi vào db thất bại</comment>
  </data>
  <data name="UserMsg_UpdateFailed" xml:space="preserve">
    <value>Chỉnh sửa thất bại</value>
    <comment>Message cho user đọc khi update bản ghi vào db thất bại</comment>
  </data>
  <data name="UserMsg_ValidateFailed" xml:space="preserve">
    <value>Dữ liệu đầu vào không hợp lệ</value>
    <comment>Message cho user đọc khi validate dữ liệu đầu vào thất bại</comment>
  </data>
  <data name="WorkShift_OneTimeShift_VN" xml:space="preserve">
    <value>Ca chấm 1 lần</value>
    <comment>text tiếng việt cho trường ca chấm 1 lần</comment>
  </data>
  <data name="WorkTime_AfterShift_VN" xml:space="preserve">
    <value>Sau ca</value>
    <comment>text tiếng việt cho trường thời điểm sau ca</comment>
  </data>
  <data name="WorkTime_BeforeShift_VN" xml:space="preserve">
    <value>Trước ca</value>
    <comment>text tiếng việt cho trường thời điểm trước ca</comment>
  </data>
  <data name="WorkTime_ShiftBreak_VN" xml:space="preserve">
    <value>Nghỉ giữa ca</value>
    <comment>text tiếng việt cho trường thời điểm giữa ca</comment>
  </data>
  <data name="WorkTime_WorkOffDay_VN" xml:space="preserve">
    <value>Ngày nghỉ</value>
    <comment>text tiếng việt cho trường thời điểm ngày nghỉ</comment>
  </data>
</root>